# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-26 00:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import tickle.common.db.fields
import tickle.people.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('pid_code', tickle.common.db.fields.NullCharField(blank=True, default=None, help_text='Last 4 digits in Swedish national identity number.', max_length=4, null=True, verbose_name='national identity code')),
                ('pid_coordination', models.BooleanField(default=False, help_text='Designates if national identity number is a <em>samordningsnummer</em>.', verbose_name='coordination number')),
                ('first_name', tickle.common.db.fields.NameField(max_length=64, verbose_name='first name')),
                ('last_name', tickle.common.db.fields.NameField(max_length=64, verbose_name='last name')),
                ('liu_id', tickle.common.db.fields.NullCharField(blank=True, default=None, max_length=8, null=True, unique=True, verbose_name='LiU ID')),
                ('liu_card_rfid', models.CharField(blank=True, max_length=32, verbose_name='LiU card number')),
                ('email', models.EmailField(max_length=256, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
                'verbose_name': 'person',
                'verbose_name_plural': 'people',
            },
            bases=(tickle.people.models.PasswordFieldMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SpecialNutrition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'special nutrition',
                'verbose_name_plural': 'special nutritions',
            },
        ),
        migrations.CreateModel(
            name='StudentUnion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', tickle.common.db.fields.NameField(max_length=64, unique=True, verbose_name='name')),
                ('slug', tickle.common.db.fields.SlugField(editable=False, max_length=64, populate_from='name', unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'student union',
                'verbose_name_plural': 'student unions',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='special_nutrition',
            field=models.ManyToManyField(blank=True, help_text='Specify any special nutritional needs or habits.', to='people.SpecialNutrition', verbose_name='special nutrition'),
        ),
        migrations.AddField(
            model_name='person',
            name='student_union',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='members', to='people.StudentUnion', verbose_name='student union'),
        ),
        migrations.AddField(
            model_name='person',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='person',
            unique_together=set([('birth_date', 'pid_code', 'pid_coordination')]),
        ),
    ]
